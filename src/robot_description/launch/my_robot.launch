<launch>
  <!-- Load the SDF model file -->
  <arg name="robot_sdf" default="$(find robot_description)/sdf/follower_vehicle.sdf" />
  <arg name="world" default="$(find robot_description)/worlds/industrial_world.world" />

  <!-- Launch Gazebo with the specified world file and spawn the robot model -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(arg world)" />
    <arg name="paused" value="false" />
    <arg name="use_sim_time" value="true" />
    <arg name="gui" value="true" />
    <arg name="headless" value="false" />
    <arg name="debug" value="false" />
  </include>
  
  <!-- Launch Gazebo with the dynamic person obstacle -->
 
  <!--node name="obstacle_plugin" pkg="robot_description" type="obstacle_plugin.py" output="screen"/-->
  

  <!-- Parameters for the DiffDrive plugin -->
  <rosparam command="load" file="$(find robot_description)/config/follower_diff_drive.yaml" />

  <!-- Spawn the follower vehicle model in Gazebo -->
  <node name="spawn_follower_vehicle" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
    args="-sdf -file $(arg robot_sdf) -model follower_vehicle">
    <param name="robot_namespace" value="/follower_vehicle" />
    <param name="publish_clock_frequency" value="50.0" />
    <param name="use_sim_time" value="true" />
  </node>
  <rosparam>
      commandTopic: "cmd_vel"
      odometryTopic: "odom"
      odometryFrame: "odom"
      robotBaseFrame: "base_link"
      publishWheelTF: true
      publishOdomTF: true
      publishWheelJointState: true
      wheelSeparation: 0.34
      wheelDiameter: 0.15
      wheelAcceleration: 0
      wheelTorque: 5
      updateRate: 100
      odometrySource: 1
      leftJoint: "left_wheel_joint"
      rightJoint: "right_wheel_joint"
    </rosparam>
</launch>
